#include <../globals.hsh>

vec3 ConvertDepthToViewSpace(float depth, vec2 texcoords) {
    
    vec4 viewSpace = globalData.ipMatrix * vec4(texcoords * 2.0 - 1.0, depth, 1.0);
    return viewSpace.xyz / viewSpace.w;
    
}

float ConvertDepthToViewSpaceDepth(float depth) {
    
    vec2 viewSpace = (globalData.ipMatrix * vec4(0.0, 0.0, depth, 1.0)).zw;
    return viewSpace.x / viewSpace.y;
    
}

vec3 ConvertDepthToViewSpace(float depth, vec2 texcoords, mat4 ipMatrix) {
    
    vec4 viewSpace = ipMatrix * vec4(texcoords * 2.0 - 1.0, depth, 1.0);
    return viewSpace.xyz / viewSpace.w;
    
}

float ConvertDepthToViewSpaceDepth(float depth, mat4 ipMatrix) {
    
    vec2 viewSpace = (ipMatrix * vec4(0.0, 0.0, depth, 1.0)).zw;
    return viewSpace.x / viewSpace.y;
    
}