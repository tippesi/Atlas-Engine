#include <utility.hsh>

vec2 UnitVectorToHemiOctahedron(vec3 dir) {

    dir.y = max(dir.y, 0.0001);
    dir.xz /= dot(abs(dir), vec3(1.0));

    return saturate(0.5 * vec2(dir.x + dir.z, dir.x - dir.z) + 0.5);

}

vec3 HemiOctahedronToUnitVector(vec2 coord) {

    coord = 2.0 * coord - 1.0;
    coord = 0.5 * vec2(coord.x + coord.y, coord.x - coord.y);

    float y = 1.0 - dot(vec2(1.0), abs(coord));
    return normalize(vec3(coord.x, y, coord.y));

}

vec2 UnitVectorToOctahedron(vec3 dir) {

    dir.xz /= dot(abs(dir), vec3(1.0));

    // Lower hemisphere
    if (dir.y < 0.0) {
        vec2 orig = dir.xz;
        dir.x = (orig.x >= 0.0 ? 1.0 : -1.0) * (1.0 - abs(orig.y));
        dir.z = (orig.y >= 0.0 ? 1.0 : -1.0) * (1.0 - abs(orig.x));
    }

    return saturate(0.5 * vec2(dir.x, dir.z) + 0.5);

}

vec3 OctahedronToUnitVector(vec2 coord) {

    coord = 2.0 * coord - 1.0;
    float y = 1.0 - dot(abs(coord), vec2(1.0));

    // Lower hemisphere
    if (y < 0.0) {
        vec2 orig = coord;
        coord.x = (orig.x >= 0.0 ? 1.0 : -1.0) * (1.0 - abs(orig.y));
        coord.y = (orig.y >= 0.0 ? 1.0 : -1.0) * (1.0 - abs(orig.x));
    }

    return normalize(vec3(coord.x, y, coord.y));

}