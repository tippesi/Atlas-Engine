#include <../globals.hsh>
#include <structures.hsh>

bool IsInstanceVisible(Instance instance, MeshInformation meshInfo) {

    vec3 min = meshInfo.aabbMax.xyz + instance.position.xyz;
    vec3 max = meshInfo.aabbMin.xyz + instance.position.xyz;

    for (int i = 0; i < 6; i++) {
        vec3 normal = globalData.frustumPlanes[i].xyz;
        float dist = globalData.frustumPlanes[i].w;
        
        vec3 s;
        s.x = normal.x >= 0.0 ? min.x : max.x;
        s.y = normal.y >= 0.0 ? min.y : max.y;
        s.z = normal.z >= 0.0 ? min.z : max.z;
                
        if (dist + dot(normal, s) < 0.0) {
            return false;
        }
    }
    return true;
}

uint GetBin(Instance instance, MeshInformation meshInfo) {

    const float binScale = 32.0;

    float dist = distance(globalData.cameraLocation.xyz, instance.position.xyz);
    // return uint(log2((dist * binScale) + 1.0));
    return uint(sqrt(dist * binScale));
    //return uint(sqrt(sqrt(dist * 64000.0)));
    //return uint(dist * 64.0 / 200.0);

}